CREATE DATABASE DENTALCLINIC
GO
USE DENTALCLINIC
GO
--GENERATES TABLES--------------------------------------------------------------------------------
CREATE TABLE ACCOUNT(
	Username VARCHAR(20) NOT NULL,
	Passwordd VARCHAR(20) NOT NULL,
	IsActived VARCHAR(3) NOT NULL,
	PRIMARY KEY (Username)
);

CREATE TABLE USER_DENTAL(
	ID INT IDENTITY(1,1) NOT NULL,
	UserID AS 'US' + RIGHT('00000000' + CAST(ID AS VARCHAR(10)), 8) PERSISTED,
	Fullname VARCHAR(20) NOT NULL,
	NationalID CHAR(12) NOT NULL,
	CurrentAddress VARCHAR(100),
	PhoneNumber CHAR(10) NOT NULL,
	Gender VARCHAR(6) NOT NULL,
	UserType VARCHAR(7) NOT NULL,
	Username VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE DENTIST(
	DentistID INT NOT NULL,
	PRIMARY KEY (DentistID)
);

CREATE TABLE STAFF(
	StaffID INT NOT NULL,
	PRIMARY KEY (StaffID)
);

CREATE TABLE AD(
	AdID INT NOT NULL,
	PRIMARY KEY (AdID)
);

CREATE TABLE CUSTOMER(
	ID INT IDENTITY(1,1) NOT NULL,
	CusID AS 'CU' + RIGHT('00000000' + CAST(ID AS VARCHAR(10)), 8) PERSISTED,
	Fullname VARCHAR(20) NOT NULL,
	CurrentAddress VARCHAR(100),
	PhoneNumber CHAR(10) NOT NULL,
	Gender VARCHAR(6) NOT NULL,
	DOB DATE NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE DENTAL_PROBLEM(
	CusID INT NOT NULL,
	Descript VARCHAR(50) NOT NULL,
	NotedDate DATETIME DEFAULT GETDATE() NOT NULL,
	PRIMARY KEY (CusID, NotedDate)
);

CREATE TABLE MEDICINE(
	Medicine VARCHAR(50) NOT NULL,
	CurrentPrice INT NOT NULL,
	PRIMARY KEY (Medicine)
);

CREATE TABLE ALLERGY(
	CusID INT NOT NULL,
	Medicine VARCHAR(50) NOT NULL,
	PRIMARY KEY (CusID, Medicine)
);

CREATE TABLE CONSTRACDICATION(
	CusID INT NOT NULL,
	Medicine VARCHAR(50) NOT NULL,
	PRIMARY KEY (CusID, Medicine)
);

CREATE TABLE ROOM(
	RoomID CHAR(3) NOT NULL,
	Floorr INT NOT NULL,
	PRIMARY KEY (RoomID)
);

CREATE TABLE APPOINTMENT(
	ID INT IDENTITY(1,1) NOT NULL,
	AID AS 'AP' + RIGHT('00000000' + CAST(ID AS VARCHAR(10)), 8) PERSISTED,
	Customer INT NOT NULL,
	Dentist INT NOT NULL,
	AssistantDentist INT,
	AppDate DATE NOT NULL,
	AppTime TIME NOT NULL,
	Room CHAR(3) NOT NULL,
	AppType VARCHAR(4) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE TREATMENT(
	ID INT IDENTITY(1,1) NOT NULL,
	Title VARCHAR(10),
	Descriptionn VARCHAR(200),
	PRIMARY KEY (ID)
);

CREATE TABLE SELECT_TREATMENT(
	ID INT IDENTITY(1,1) NOT NULL,
	STID AS 'ST' + RIGHT('00000000' + CAST(ID AS VARCHAR(10)), 8) PERSISTED,
	Treatment INT NOT NULL,
	Customer INT NOT NULL,
	Dentist INT NOT NULL,
	AssistantDentist INT,
	CreatedDate DATE DEFAULT GETDATE() NOT NULL,
	TimeOfReex INT,
	Note VARCHAR(100),
	TreatmentState VARCHAR(7) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE TOOTH(
	ID INT IDENTITY(1,1) NOT NULL,
	ToothName VARCHAR(12) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE TOOTH_PRICE(
	Treatment INT NOT NULL,
	Tooth INT NOT NULL,
	CurrentPrice INT NOT NULL,
	PRIMARY KEY (Tooth, Treatment)
);

CREATE TABLE TOOTH_SURFACE(
	ShortName CHAR(1) NOT NULL,
	Fullname VARCHAR(10) NOT NULL,
	PRIMARY KEY (ShortName)
);

CREATE TABLE SELECT_TOOTH(
	SelectTreatment INT NOT NULL,
	Tooth INT NOT NULL,
	Surface CHAR(1) NOT NULL,
	ToothPrice INT,
	PRIMARY KEY (SelectTreatment, Tooth, Surface)
);

CREATE TABLE MODE_PAYMENT(
	ID INT IDENTITY(1,1) NOT NULL,
	Mode VARCHAR(10) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE INVOICE(
	ID INT IDENTITY(1,1) NOT NULL,
	InvcID AS 'IN' + RIGHT('00000000' + CAST(ID AS VARCHAR(10)), 8) PERSISTED,
	SelectTreatment INT,
	TotalToothPrice INT,
	TotalPriceMedicine INT,
	TotalPrice INT NOT NULL,
	Mode INT NOT NULL,
	CusPaid INT NOT NULL,
	Change INT,
	InvcTime DATETIME DEFAULT GETDATE() NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE DETAIL_MEDICINE(
	SelectTreatment INT NOT NULL,
	Medicine VARCHAR(50) NOT NULL,
	Quantity INT NOT NULL,
	MedicinePrice INT,
	EstimatePrice INT,
	PRIMARY KEY (SelectTreatment, Medicine)
);

GO
--GENERATES CONSTRAINTS----------------------------------------------------------------------
--ACCOUNT TABLE
ALTER TABLE ACCOUNT
ADD CONSTRAINT CK_IsActived_ACCOUNT
CHECK (IsActived='YES' OR IsActived='NO');

ALTER TABLE ACCOUNT
ADD CONSTRAINT DF_IsActived_ACCOUNT
DEFAULT 'YES' FOR IsActived

--USER_DENTAL TABLE
ALTER TABLE USER_DENTAL
ADD CONSTRAINT FK_Username_ACCOUNT
FOREIGN KEY (Username) REFERENCES ACCOUNT (Username);

ALTER TABLE USER_DENTAL
ADD CONSTRAINT UC_Username
UNIQUE (Username);

ALTER TABLE USER_DENTAL 
ADD CONSTRAINT CK_Gender_USER_DENTAL
CHECK (Gender='MALE' OR Gender='FEMALE' OR Gender='OTHER');

ALTER TABLE USER_DENTAL
ADD CONSTRAINT CK_UserType_USER_DENTAL
CHECK (UserType='DENTIST' OR UserType='STAFF' OR UserType='ADMIN');

--DENSTIST TABLE
ALTER TABLE DENTIST
ADD CONSTRAINT FK_DenstistID_USERDENTAL
FOREIGN KEY (DentistID) REFERENCES USER_DENTAL (ID);

--STAFF TABLE
ALTER TABLE STAFF
ADD CONSTRAINT FK_StaffID_USERDENTAL
FOREIGN KEY (StaffID) REFERENCES USER_DENTAL (ID);

--AD TABLE
ALTER TABLE AD
ADD CONSTRAINT FK_AdID_USERDENTAL
FOREIGN KEY (AdID) REFERENCES USER_DENTAL (ID);

--CUSTOMER TABLE
ALTER TABLE CUSTOMER
ADD CONSTRAINT CK_Gender_CUSTOMER
CHECK (Gender='MALE' OR Gender='FEMALE' OR Gender='OTHER');

--DENTAL_PROBLEM TABLE
ALTER TABLE DENTAL_PROBLEM
ADD CONSTRAINT FK_DENTAL_PROBLEM_CUSTOMER
FOREIGN KEY (CusID) REFERENCES CUSTOMER (ID);

--ALLERGY TABLE
ALTER TABLE ALLERGY
ADD CONSTRAINT FK_ALLERGY_CUSTOMER
FOREIGN KEY (CusID) REFERENCES CUSTOMER (ID);

ALTER TABLE ALLERGY
ADD CONSTRAINT FK_ALLERGY_MEDICINE
FOREIGN KEY (Medicine) REFERENCES MEDICINE (Medicine);

--CONSTRACDICATION TABLE
ALTER TABLE CONSTRACDICATION
ADD CONSTRAINT FK_CONSTRACDICATION_CUSTOMER
FOREIGN KEY (CusID) REFERENCES CUSTOMER (ID);

ALTER TABLE CONSTRACDICATION
ADD CONSTRAINT FK_CONSTRACDICATION_MEDICINE
FOREIGN KEY (Medicine) REFERENCES MEDICINE (Medicine);

--ROOM TABLE
ALTER TABLE ROOM
ADD CONSTRAINT CK_Floorr_ROOM
CHECK (1 <= Floorr AND Floorr <= 3);

--APPOINTMENT TABLE
ALTER TABLE APPOINTMENT
ADD CONSTRAINT FK_APPOINTMENT_CUSTOMER
FOREIGN KEY (Customer) REFERENCES CUSTOMER (ID);

ALTER TABLE APPOINTMENT
ADD CONSTRAINT FK_APPOINTMENT_DENTIST
FOREIGN KEY (Dentist) REFERENCES DENTIST (DentistID);

ALTER TABLE APPOINTMENT 
ADD CONSTRAINT FK_APPOINTMENTt_DENTIST_Assistant
FOREIGN KEY (AssistantDentist) REFERENCES DENTIST (DentistID);

ALTER TABLE APPOINTMENT 
ADD CONSTRAINT FK_APPOINTMENT_ROOM
FOREIGN KEY (Room) REFERENCES ROOM (RoomID);

ALTER TABLE APPOINTMENT
ADD CONSTRAINT CK_AppType_APPOINTMENT
CHECK (AppType='NEW' OR AppType='REEX');

--SELECT_TREATMENT TABLE
ALTER TABLE SELECT_TREATMENT
ADD CONSTRAINT FK_SELECT_TREATMENT_TREATMENT
FOREIGN KEY (Treatment) REFERENCES TREATMENT (ID);

ALTER TABLE SELECT_TREATMENT
ADD CONSTRAINT FK_SELECT_TREATMENT_CUSTOMER
FOREIGN KEY (Customer) REFERENCES CUSTOMER (ID);

ALTER TABLE SELECT_TREATMENT
ADD CONSTRAINT FK_SELECT_TREATMENT_DENTIST
FOREIGN KEY (Dentist) REFERENCES DENTIST (DentistID);

ALTER TABLE SELECT_TREATMENT
ADD CONSTRAINT FK_SELECT_TREATMENT_DENTIST_Assistant
FOREIGN KEY (AssistantDentist) REFERENCES DENTIST (DentistID);

ALTER TABLE SELECT_TREATMENT
ADD CONSTRAINT CK_TreatmentState_SELECT_TREATMENT
CHECK (TreatmentState='CANCLED' OR TreatmentState='DONE' OR TreatmentState='INIT');

--TOOTH_PRICE TABLE
ALTER TABLE TOOTH_PRICE
ADD CONSTRAINT FK_TOOTH_PRICE_TREATMENT
FOREIGN KEY (Treatment) REFERENCES TREATMENT (ID);

ALTER TABLE TOOTH_PRICE
ADD CONSTRAINT FK_TOOTH_PRICE_TOOTH
FOREIGN KEY (Tooth) REFERENCES TOOTH (ID);

--SELECT_TOOTH TABLE
ALTER TABLE SELECT_TOOTH
ADD CONSTRAINT FK_SELECT_TOOTH_SELECT_TREATMENT
FOREIGN KEY (SelectTreatment) REFERENCES SELECT_TREATMENT (ID);

ALTER TABLE SELECT_TOOTH
ADD CONSTRAINT FK_SELECT_TOOTH_TOOTH
FOREIGN KEY (Tooth) REFERENCES TOOTH (ID);

ALTER TABLE SELECT_TOOTH
ADD CONSTRAINT FK_SELECT_TOOTH_TOOTH_SURFACE
FOREIGN KEY (Surface) REFERENCES TOOTH_SURFACE (ShortName);

--INVOICE TABLE
ALTER TABLE INVOICE
ADD CONSTRAINT FK_INVOICE_SELECT_TREATMENT
FOREIGN KEY (SelectTreatment) REFERENCES SELECT_TREATMENT (ID);

ALTER TABLE INVOICE
ADD CONSTRAINT FK_INVOICE_MODE_PAYMENT
FOREIGN KEY (Mode) REFERENCES MODE_PAYMENT (ID);

ALTER TABLE INVOICE
ADD CONSTRAINT DF_TotalToothPrice_INVOICE
DEFAULT 0 FOR TotalToothPrice;

ALTER TABLE INVOICE
ADD CONSTRAINT DF_TotalPriceMedicine_INVOICE
DEFAULT 0 FOR TotalPriceMedicine;

ALTER TABLE INVOICE
ADD CONSTRAINT DF_TotalPrice_INVOICE
DEFAULT 0 FOR TotalPrice;

ALTER TABLE INVOICE
ADD CONSTRAINT DF_Change_INVOICE
DEFAULT 0 FOR Change;

--DETAIL_MEDICINE TABLE
ALTER TABLE DETAIL_MEDICINE
ADD CONSTRAINT FK_DETAIL_MEDICINE_SELECT_TREATMENT
FOREIGN KEY (SelectTreatment) REFERENCES SELECT_TREATMENT (ID);

ALTER TABLE DETAIL_MEDICINE
ADD CONSTRAINT FK_DETAIL_MEDICINE_MEDICINE
FOREIGN KEY (Medicine) REFERENCES MEDICINE (Medicine);

GO
